<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>《我的千岁寒》</title>
  
  <subtitle>看到自己的世界并勇敢的长大！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-15T11:00:21.371Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>akreturn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用hexo+github搭建个人博客</title>
    <link href="http://yoursite.com/2018/09/15/%E4%BD%BF%E7%94%A8hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/09/15/使用hexo+github搭建个人博客/</id>
    <published>2018-09-15T10:45:17.992Z</published>
    <updated>2018-09-15T11:00:21.371Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Sep 15 2018 22:32:59 GMT+0800 (CST) --><p>安装node.js，安装git for windows。</p><p>所有必备的应用程序安装完成后，创建一个文件夹（用来存放所有blog的东西），然后在该文件夹下使用 npm 安装 Hexo。（所有命令建议使用git的终端来执行）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>过程有点慢以为没反应失败，其实一直在安装，建议切换npm镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure><p>设置淘宝镜像源后，很快就安装完毕了。</p><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在该文件夹中新建所需要的文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init </span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>到此，Hexo安装完成。</p><p>hexo常用命令</p><p>常见命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure><p>缩写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>组合命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure><h2 id="Github-Pages设置"><a href="#Github-Pages设置" class="headerlink" title="Github Pages设置"></a>Github Pages设置</h2><h3 id="什么是Github-Pages"><a href="#什么是Github-Pages" class="headerlink" title="什么是Github Pages"></a>什么是Github Pages</h3><p><a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> 本用于介绍托管在GitHub的项目，不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。</p><p>每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是yourgithubname.github.io，这是特殊的命名约定。你可以通过<a href="http://yourgithubname.github.io/" target="_blank" rel="noopener">http://yourgithubname.github.io</a> 来访问你的个人主页。</p><p>需要注意的个人主页的网站内容是在master分支下的。</p><h3 id="创建Github-Pages"><a href="#创建Github-Pages" class="headerlink" title="创建Github Pages"></a>创建Github Pages</h3><p>在github创建了一个repo叫做 <a href="https://github.com/hombinwong/hombinwong.github.io" target="_blank" rel="noopener">hombinwong.github.io</a>. 创建完成之后，需要有一次提交(git commit)操作，然后就可以通过链接<a href="http://hombinwong.github.io/" target="_blank" rel="noopener">http://hombinwong.github.io/</a> 访问了。</p><h2 id="Hexo搭桥到github"><a href="#Hexo搭桥到github" class="headerlink" title="Hexo搭桥到github"></a>Hexo搭桥到github</h2><p>首先需要明白部署到github的原理。</p><ol><li>之前在Github上创建的那个特别的仓库（hombinwong.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接<a href="http://hombinwong.github.io/" target="_blank" rel="noopener">http://hombinwong.github.io</a>来直接访问。</li><li>Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。</li><li>需要将hexo生成的静态网站，提交(git commit)到github上。</li></ol><h3 id="配置SHH-Key"><a href="#配置SHH-Key" class="headerlink" title="配置SHH Key"></a>配置SHH Key</h3><p>如果你之前已经配置好git个人信息，请跳过这一个步骤</p><p>设置Git的user name和email：(如果是第一次的话)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;your email&quot;</span><br></pre></td></tr></table></figure><p>生成密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your email&quot;</span><br></pre></td></tr></table></figure><p>连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh）。</p><p>打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key。将id_rsa.pub文件里的key粘贴到key那里，title随便填，保存。</p><h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3><p>打开 站点配置文件<code>_config.yml</code>，找到deploy，然后按照如下修改：（PS:如果要配多个deploy，type前面加-）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>比如我的仓库的地址是hombinwong.github.io，所以配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">- type: git</span><br><span class="line">  repository: git@github.com:hombinwong/hombinwong.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">- type: baidu_url_submitter ## 推送到百度搜索</span><br></pre></td></tr></table></figure><p>安装部署到github的插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>执行命令(建议每次都按照如下步骤部署)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在浏览器中输入<code>http://yourgithubname.github.io</code>就可以看到你的个人博客。</p><h2 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h2><p>当然，你不绑定域名肯定也是可以的，就用默认的 <code>yourgithubname.github.io</code> 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。</p><p>首先注册一个域名，域名注册推荐去阿里云，本来想用.me域名，不过现在这些非主流的域名工信部还没有纳入备案的条件，如目前的.online,.xyz,.me等都不能备案。如果有需要可以绑定国外服务器，这样就不需要备案了，比如<code>godaddy</code>。</p><p>绑定域名分2种情况：带www和不带www的。</p><p>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下<code>yourgithubname.github.io</code>的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向<code>yourgithubname.github.io</code>，这样可以保证无论是否添加www都可以访问，如下：</p><p><img src="http://p0hus6c9p.bkt.clouddn.com/blog/171210/L76E1GgfgI.png-blog" alt="mark"></p><p>然后到你的Hexo/source目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试：</p><ul><li>如果你填写的是没有www的，比如 <a href="http://wanghongbin.top/" target="_blank" rel="noopener">wanghongbin.top</a>，那么无论是访问 <a href="http://www.wanghongbin.top/" target="_blank" rel="noopener">http://www.wanghongbin.top</a> 还是 <a href="https://www.wanghongbin.top/2017/12/10/%E4%BD%BF%E7%94%A8Hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/wanghongbin.top" target="_blank" rel="noopener">http://wanghongbin.top</a>，都会自动跳转到 <a href="http://wanghongbin.top/" target="_blank" rel="noopener">http://wanghongbin.top</a></li><li>如果你填写的是带www的，比如 <a href="http://www.wanghongbin.top" target="_blank" rel="noopener">www.wanghongbin.top</a> ，那么无论是访问 <a href="http://www.wanghongbin.top/" target="_blank" rel="noopener">http://www.wanghongbin.top</a>还是 <a href="http://wanghongbin.top/" target="_blank" rel="noopener">http://wanghongbin.top</a>，都会自动跳转到 <a href="http://www.wanghongbin.top/" target="_blank" rel="noopener">http://www.wanghongbin.top</a></li></ul><p>另外说一句，在你绑定了新域名之后，原来的<code>yourgithubname.github.io</code>并没有失效，而是会自动跳转到你的新域名。</p><h2 id="发表博客"><a href="#发表博客" class="headerlink" title="发表博客"></a>发表博客</h2><h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><p>定位到我们的hexo根目录，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &apos;my-first-blog&apos;</span><br></pre></td></tr></table></figure><p>然后你就可以在<code>source/_posts</code>路径下看到生成的相关md文件。我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><p><img src="http://p0hus6c9p.bkt.clouddn.com/blog/171210/4BkEK9D6ad.png-blog" alt="mark"></p><p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><p>关于具体的文章编辑可以看下<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">官网的介绍</a>。</p><h3 id="让博文列表不显示全部内容"><a href="#让博文列表不显示全部内容" class="headerlink" title="让博文列表不显示全部内容"></a>让博文列表不显示全部内容</h3><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p><p>在合适的位置加上<code>&lt;!--more--&gt;</code>即可。例如：</p><p><img src="http://p0hus6c9p.bkt.clouddn.com/blog/171210/i4gIddbAL8.png-blog" alt="mark"></p><h3 id="写博客工具"><a href="#写博客工具" class="headerlink" title="写博客工具"></a>写博客工具</h3><p>markdown语法参考<a href="http://wowubuntu.com/markdown/#link" target="_blank" rel="noopener">markdown</a>。</p><p>markdown编辑器推荐一个极致简洁的：<a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a>。</p><p>图床，推荐<a href="https://portal.qiniu.com/signup?code=3lhfs3agk5s9e" target="_blank" rel="noopener">七牛</a>+<a href="http://mpic.lzhaofu.cn/" target="_blank" rel="noopener">MPic-图床神器</a> 组合。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/index.html</a></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Sep 15 2018 22:32:59 GMT+0800 (CST) --&gt;&lt;p&gt;安装node.js，安装git for windows。&lt;/p&gt;&lt;p&gt;所有必备的应用程序安装完成后，创建一个文件夹（用来存放所有blog的东西），然后在该文
      
    
    </summary>
    
    
      <category term="Hexo github gitpage" scheme="http://yoursite.com/tags/Hexo-github-gitpage/"/>
    
  </entry>
  
  <entry>
    <title>安家,熟悉以下 markdown 语法</title>
    <link href="http://yoursite.com/2018/09/14/hello-world/"/>
    <id>http://yoursite.com/2018/09/14/hello-world/</id>
    <published>2018-09-14T03:20:15.634Z</published>
    <updated>2018-09-15T10:18:05.890Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Sep 15 2018 22:32:59 GMT+0800 (CST) --><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>……</p><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>然后巴拉巴拉……</p><p><strong>加粗</strong></p><ul><li>倾斜 *</li></ul><p>～ 删除 ～</p><blockquote><p>引用</p></blockquote><p>— 分割线</p><p><img src="https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg" alt="blockchain" title="区块链"></p><p><a href="http://google.com" target="_blank" rel="noopener">谷歌</a></p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><table><thead><tr><th>表头</th><th style="text-align:center">表头</th><th style="text-align:right">表头</th></tr></thead><tbody><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr></tbody></table><p>第二行分割表头和内容。</p><ul><li>有一个就行，为了对齐，多加了几个<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略</li></ul><p>`</p><p></p><div><br><p>我是code 1</p><br></div><br><code>(``</code>)<br>代码…<br>代码…<br>代码…<br>(<code>`</code>)<p></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Sep 15 2018 22:32:59 GMT+0800 (CST) --&gt;&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;p&gt;……&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2013/07/13/%E6%B5%8B%E8%AF%95hexo%20api/"/>
    <id>http://yoursite.com/2013/07/13/测试hexo api/</id>
    <published>2013-07-13T12:46:25.000Z</published>
    <updated>2018-09-15T13:28:52.126Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sat Sep 15 2018 22:32:59 GMT+0800 (CST) --><p>h</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sat Sep 15 2018 22:32:59 GMT+0800 (CST) --&gt;&lt;p&gt;h&lt;/p&gt;&lt;!-- rebuild by neat --&gt;
      
    
    </summary>
    
      <category term="Diary" scheme="http://yoursite.com/categories/Diary/"/>
    
    
      <category term="PS3  Games" scheme="http://yoursite.com/tags/PS3-Games/"/>
    
  </entry>
  
</feed>
